<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>jar-demo</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.12.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.12.1</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.12.1</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.16</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.example</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.5.1</version>
            <!--引入外部依赖-->
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/libs/hutool-all-5.5.1.jar</systemPath>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <!--为所有依赖包在manifest文件内添加Class-Path值(不包括外部依赖)，前缀为libs-->
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>libs/</classpathPrefix>
                            <!--在manifest里添加Main-Class值-->
                            <mainClass>
                                com.example.Main
                            </mainClass>
                        </manifest>
                        <manifestEntries>
                            <!--手动为外部依赖添加Class-Path值-->
                            <Class-Path>libs/hutool-all-5.5.1.jar</Class-Path>
                        </manifestEntries>
                    </archive>
                    <excludes>
                        <!--排除文件-->
                        <exclude>config/auth.key</exclude>
                        <!--排除文件夹-->
                        <exclude>libs/</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--拷贝依赖到跟jar包同一目录下的libs-->
                            <outputDirectory>
                                ${project.build.directory}/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-jar-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        <manifest>-->
<!--                            &lt;!&ndash;为所有依赖包在manifest文件内添加Class-Path值(不包括外部依赖)，前缀为libs&ndash;&gt;-->
<!--                            <addClasspath>true</addClasspath>-->
<!--                            <classpathPrefix>libs/</classpathPrefix>-->
<!--                            &lt;!&ndash;在manifest里添加Main-Class值&ndash;&gt;-->
<!--                            <mainClass>-->
<!--                                com.example.Main-->
<!--                            </mainClass>-->
<!--                        </manifest>-->
<!--                        <manifestEntries>-->
<!--                            &lt;!&ndash;手动为外部依赖添加Class-Path值&ndash;&gt;-->
<!--                            <Class-Path>. libs/hutool-all-5.5.1.jar</Class-Path>-->
<!--                        </manifestEntries>-->
<!--                    </archive>-->
<!--                    <excludes>-->
<!--                        &lt;!&ndash;排除文件夹&ndash;&gt;-->
<!--                        <exclude>config/</exclude>-->
<!--                        <exclude>libs/</exclude>-->
<!--                    </excludes>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-assembly-plugin</artifactId>-->
<!--                &lt;!&ndash; The configuration of the plugin &ndash;&gt;-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; Specifies the configuration file of the assembly plugin &ndash;&gt;-->
<!--                    <descriptors>-->
<!--                        <descriptor>${project.build.outputDirectory}/config/package.xml</descriptor>-->
<!--                    </descriptors>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>make-assembly</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>single</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>
</project>